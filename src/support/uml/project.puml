@startuml
class Shoe {
    -ArrayList<Card> shoe
    +Card getNextCard()
    +void printShoe()
    +void setShoe()
    +int getNumCards()
}

class Card {
    +void Print()
    +String getImagePath()
    +int getVal()
    +int getSuit()
    -int suit
    -int val
}

class Simulation {
    +void Deal()
    +void startNewRound()
    +Hand getPlayer()
    +Hand getDealer()
    +boolean Hit()
    +int stand()
    +int doubleDown()
    -int simulaterDealer()
    -boolean checkForBust(hand h)
    -Shoe shoe
    -Hand player
    -Hand dealer
    -int chips
    -int curBet
}

class MyPanel {
    +MyPanel(Simulation s)
    -void drawBackground()
    -void drawHand()
    -Simulation sim
    -Dimension screenSize
    -BufferedImage background
}

class Runner {
	+main(String[] args)
}

class GameController {
    +GameController(Simulation s, MyPanel p)
    -void addButtons()
    -Simulation sim
    -MyPanel p
    -ArrayList<JButton> buttons
}

class Hand {
    +int getScore()
    +void reset()
    +int getNumCards()
    +boolean isBlackJack()
    +void addCard(Card c)
    +ArrayList<Card> getCards()
    +boolean determineWinner(Hand h)
    -ArrayList<Card> Hand
    -int score 
    -boolean soft
}

Shoe o-- Card
Hand o-- Card
Simulation --> Shoe : controls
Simulation --> Hand : controls
Runner --> GameController
GameController --> MyPanel : Manages
GameController --> Simulation : Manages
@enduml